{"cells":[{"cell_type":"code","source":["# Training dataset\n","training_data = [\n","   (['Yes', 'Yes'], 'Dog'),\n","   (['Yes', 'No'], 'Cat'),\n","   (['No', 'Yes'], 'Dog'),\n","   (['No', 'No'], 'Cat'),\n","   (['Yes', 'Yes'], 'Dog')\n","]\n","# Initial hypothesis\n","h = ['∅', '∅']\n","# Find-S algorithm\n","for example, label in training_data:\n","   if label == 'Dog':\n","      for i in range(len(example)):\n","         if h[i] == '∅':\n","            h[i] = example[i]\n","         elif h[i] != example[i]:\n","            h[i] = '?'\n","\n","print(\"Final hypothesis:\", h)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h5Csv8VL1f0z","executionInfo":{"status":"ok","timestamp":1742531011849,"user_tz":-330,"elapsed":37,"user":{"displayName":"SUMAN PANDIT","userId":"09543671476382205047"}},"outputId":"278358eb-3c21-4d67-f1f6-6cfedcb5210c"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Final hypothesis: ['?', 'Yes']\n"]}]},{"cell_type":"code","source":["import os\n","print(os.getcwd())  # This will print the current working directory\n"],"metadata":{"id":"dg0J3nc_ytBR","executionInfo":{"status":"ok","timestamp":1740649458763,"user_tz":-330,"elapsed":13,"user":{"displayName":"","userId":""}},"outputId":"412942e7-56cd-4904-c330-2b6687a8c738","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from google.colab import drive\n","drive.mount(\"/content/drive\")\n","path = \"/content/drive/MyDrive/cs693c/1/enjoysport (1).csv\"\n","df = pd.read_csv(path)\n","df.head(10)"],"metadata":{"id":"nLrJgnaDu6Qo","executionInfo":{"status":"ok","timestamp":1742531134594,"user_tz":-330,"elapsed":25512,"user":{"displayName":"SUMAN PANDIT","userId":"09543671476382205047"}},"outputId":"afcc4823-65b0-44fb-a61a-7f024eff17d1","colab":{"base_uri":"https://localhost:8080/","height":193}},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]},{"output_type":"execute_result","data":{"text/plain":["     sky airtemp humidity    wind water forcast enjoysport\n","0  sunny    warm   normal  strong  warm    same        yes\n","1  sunny    warm     high  strong  warm    same        yes\n","2  rainy    cold     high  strong  warm  change         no\n","3  sunny    warm     high  strong  cool  change        yes"],"text/html":["\n","  <div id=\"df-f9300638-8d1a-4c59-8f31-3036de43af1d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sky</th>\n","      <th>airtemp</th>\n","      <th>humidity</th>\n","      <th>wind</th>\n","      <th>water</th>\n","      <th>forcast</th>\n","      <th>enjoysport</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>sunny</td>\n","      <td>warm</td>\n","      <td>normal</td>\n","      <td>strong</td>\n","      <td>warm</td>\n","      <td>same</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>sunny</td>\n","      <td>warm</td>\n","      <td>high</td>\n","      <td>strong</td>\n","      <td>warm</td>\n","      <td>same</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>rainy</td>\n","      <td>cold</td>\n","      <td>high</td>\n","      <td>strong</td>\n","      <td>warm</td>\n","      <td>change</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>sunny</td>\n","      <td>warm</td>\n","      <td>high</td>\n","      <td>strong</td>\n","      <td>cool</td>\n","      <td>change</td>\n","      <td>yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9300638-8d1a-4c59-8f31-3036de43af1d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f9300638-8d1a-4c59-8f31-3036de43af1d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f9300638-8d1a-4c59-8f31-3036de43af1d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fa295c8d-f578-41e9-90aa-f46e14359a14\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fa295c8d-f578-41e9-90aa-f46e14359a14')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fa295c8d-f578-41e9-90aa-f46e14359a14 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"sky\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"rainy\",\n          \"sunny\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"airtemp\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"cold\",\n          \"warm\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"humidity\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"high\",\n          \"normal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wind\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"strong\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"water\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"cool\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"forcast\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"change\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"enjoysport\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["import csv\n","\n","# Read the CSV file and store it into the list 'a'\n","a = []\n","with open('/content/drive/MyDrive/cs693c/1/enjoysport (1).csv', 'r') as csvfile:\n","    reader = csv.reader(csvfile)\n","    for row in reader:\n","        a.append(row)\n","\n","# Print the dataset\n","print(\"Dataset:\\n\", a)\n","\n","# The total number of training instances\n","print(\"\\nThe total number of training instances are: \", len(a))\n","\n","# Determine the number of attributes (excluding the label column)\n","num_attribute = len(a[0]) - 1\n","print(\"\\nThe initial hypothesis is: \")\n","hypothesis = ['0'] * num_attribute\n","print(hypothesis)\n","\n","# Iterate through the training instances\n","for i in range(0, len(a)):\n","    # Only consider instances where the label is 'yes'\n","    if a[i][num_attribute] == 'yes':\n","        for j in range(0, num_attribute):\n","            # If the hypothesis is still '0' (which means no information), or it matches the current attribute value\n","            if hypothesis[j] == '0' or hypothesis[j] == a[i][j]:\n","                hypothesis[j] = a[i][j]  # Update the hypothesis with the current value\n","            else:\n","                hypothesis[j] = '?'  # If it conflicts, mark it as a '?'\n","\n","    # Print the hypothesis for each training instance where the label is 'yes'\n","    print(\"\\nThe hypothesis for the training instance {} is: \\n\".format(i + 1), hypothesis)\n","\n","# Finally, print the maximally specific hypothesis\n","print(\"\\nThe maximally specific hypothesis for the training instances is:\")\n","print(hypothesis)\n"],"metadata":{"id":"SqHuxWMiyIMe","executionInfo":{"status":"ok","timestamp":1740649495403,"user_tz":-330,"elapsed":16,"user":{"displayName":"","userId":""}},"outputId":"13e98c92-bb87-46c1-e88c-74c40d48a67c","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Dataset:\n"," [['sky', 'airtemp', 'humidity', 'wind', 'water', 'forcast', 'enjoysport'], ['sunny', 'warm', 'normal', 'strong', 'warm', 'same', 'yes'], ['sunny', 'warm', 'high', 'strong', 'warm', 'same', 'yes'], ['rainy', 'cold', 'high', 'strong', 'warm', 'change', 'no'], ['sunny', 'warm', 'high', 'strong', 'cool', 'change', 'yes']]\n","\n","The total number of training instances are:  5\n","\n","The initial hypothesis is: \n","['0', '0', '0', '0', '0', '0']\n","\n","The hypothesis for the training instance 1 is: \n"," ['0', '0', '0', '0', '0', '0']\n","\n","The hypothesis for the training instance 2 is: \n"," ['sunny', 'warm', 'normal', 'strong', 'warm', 'same']\n","\n","The hypothesis for the training instance 3 is: \n"," ['sunny', 'warm', '?', 'strong', 'warm', 'same']\n","\n","The hypothesis for the training instance 4 is: \n"," ['sunny', 'warm', '?', 'strong', 'warm', 'same']\n","\n","The hypothesis for the training instance 5 is: \n"," ['sunny', 'warm', '?', 'strong', '?', '?']\n","\n","The maximally specific hypothesis for the training instances is:\n","['sunny', 'warm', '?', 'strong', '?', '?']\n"]}]}],"metadata":{"colab":{"provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1740649758697}],"toc_visible":true},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}